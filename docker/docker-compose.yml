version: '3.8'

services:
  spiking-fpga-toolchain:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: terragon/spiking-fpga-toolchain:latest
    container_name: spiking-fpga-compiler
    restart: unless-stopped
    
    volumes:
      # Mount local directories for input/output
      - ./input:/app/input:ro
      - ./output:/app/output
      - ./cache:/app/cache
      - ./logs:/app/logs
    
    environment:
      - SPIKING_FPGA_CACHE_DIR=/app/cache
      - SPIKING_FPGA_LOG_DIR=/app/logs
      - SPIKING_FPGA_LOG_LEVEL=INFO
      - SPIKING_FPGA_MAX_WORKERS=4
      - SPIKING_FPGA_ENABLE_MONITORING=true
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "from spiking_fpga import FPGATarget; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Security options
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    
    # Command override for production
    command: ["tail", "-f", "/dev/null"]  # Keep container running

  # Optional: Redis for caching in distributed environments
  redis-cache:
    image: redis:7-alpine
    container_name: spiking-fpga-cache
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    profiles:
      - distributed

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: spiking-fpga-monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  default:
    name: spiking-fpga-network
    driver: bridge